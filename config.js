// config.js - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
// ========================================================================

// üîß –ë–ï–ó–û–ü–ê–°–ù–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò
async function initializeConfig() {
    console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');
    
    try {
        // üóÑÔ∏è –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø SUPABASE
        if (typeof window.SUPABASE_CONFIG === 'undefined') {
            window.SUPABASE_CONFIG = {
                url: process.env.SUPABASE_URL || 'https://your-project.supabase.co',
                anonKey: process.env.SUPABASE_ANON_KEY || 'your-anon-key-here'
            };
            console.log('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É—é —Ñ–æ–ª–ª–±—ç–∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Supabase');
        }

        // üîó –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø API
        if (typeof window.API_CONFIG === 'undefined') {
            window.API_CONFIG = {
                n8nWebhookUrl: process.env.N8N_WEBHOOK_URL || 'https://your-n8n.app/webhook/tarot',
                cardsUrl: 'https://raw.githubusercontent.com/username/tarot-cards/main/cards.json',
                timeout: 10000,
                retryAttempts: 3
            };
            console.log('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É—é —Ñ–æ–ª–ª–±—ç–∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é API');
        }

        // üì± –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
        if (typeof window.APP_CONFIG === 'undefined') {
            window.APP_CONFIG = {
                appName: '–®—ë–ø–æ—Ç –ö–∞—Ä—Ç',
                version: '1.0.0',
                freeQuestionsLimit: 3,
                maxHistoryItems: 50,
                cacheExpiry: 24 * 60 * 60 * 1000, // 24 —á–∞—Å–∞
                
                texts: {
                    loading: '–ö–∞—Ä—Ç—ã —à–µ–ø—á—É—Ç...',
                    cardsReady: '–ö–∞—Ä—Ç—ã –≥–æ—Ç–æ–≤—ã!',
                    error: '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...',
                    noInternet: '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º'
                },
                
                premium: {
                    monthly: {
                        price: 299,
                        currency: 'RUB',
                        description: '–ú–µ—Å—è—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞'
                    },
                    yearly: {
                        price: 2999,
                        currency: 'RUB', 
                        description: '–ì–æ–¥–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞'
                    }
                }
            };
            console.log('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É—é —Ñ–æ–ª–ª–±—ç–∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
        }

        // üìä –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –¢–ê–ë–õ–ò–¶ SUPABASE
        if (typeof window.TABLES === 'undefined') {
            window.TABLES = {
                users: 'users',
                predictions: 'predictions',
                daily_cards: 'daily_cards',
                subscriptions: 'subscriptions'
            };
        }

        // üîÆ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø TELEGRAM
        if (typeof window.TELEGRAM_CONFIG === 'undefined') {
            window.TELEGRAM_CONFIG = {
                botUsername: 'your_tarot_bot',
                webAppUrl: 'https://your-app.vercel.app',
                allowedUpdates: ['message', 'callback_query', 'inline_query']
            };
        }

        // üé¥ –§–û–õ–õ–ë–≠–ö –ö–ê–†–¢–´ (–µ—Å–ª–∏ GitHub –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)
        if (typeof window.FALLBACK_CARDS === 'undefined') {
            window.FALLBACK_CARDS = [
                {
                    id: "FB_0",
                    name: "–ó–∞–≥–∞–¥–æ—á–Ω–∞—è –∫–∞—Ä—Ç–∞",
                    symbol: "üîÆ",
                    meaningUpright: "–ö–∞—Ä—Ç—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, –Ω–æ —ç–Ω–µ—Ä–≥–∏—è –í—Å–µ–ª–µ–Ω–Ω–æ–π –≤—Å–µ —Ä–∞–≤–Ω–æ —Å –≤–∞–º–∏.",
                    meaningReversed: "–í–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø–æ–∑–∂–µ.",
                    meaning: "–ö–∞—Ä—Ç—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, –Ω–æ —ç–Ω–µ—Ä–≥–∏—è –í—Å–µ–ª–µ–Ω–Ω–æ–π –≤—Å–µ —Ä–∞–≤–Ω–æ —Å –≤–∞–º–∏.",
                    image: "./images/cards/default.jpg",
                    type: "–§–æ–ª–ª–±—ç–∫",
                    element: "–≠—Ñ–∏—Ä"
                },
                {
                    id: "FB_1",
                    name: "–ú–∞–≥",
                    symbol: "‚ö°",
                    meaningUpright: "–°–∏–ª–∞ –≤–æ–ª–∏, –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ, –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è. –£ –≤–∞—Å –µ—Å—Ç—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–µ–π.",
                    meaningReversed: "–ó–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —Å–∏–ª–æ–π, —Å–∞–º–æ–æ–±–º–∞–Ω, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ —ç–Ω–µ—Ä–≥–∏–∏.",
                    meaning: "–°–∏–ª–∞ –≤–æ–ª–∏, –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ, –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è.",
                    image: "./images/cards/magician.jpg",
                    type: "–°—Ç–∞—Ä—à–∏–µ –ê—Ä–∫–∞–Ω—ã",
                    element: "–í–æ–∑–¥—É—Ö"
                },
                {
                    id: "FB_2", 
                    name: "–ñ—Ä–∏—Ü–∞",
                    symbol: "üåô",
                    meaningUpright: "–ò–Ω—Ç—É–∏—Ü–∏—è, —Ç–∞–π–Ω—ã–µ –∑–Ω–∞–Ω–∏—è, –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –º—É–¥—Ä–æ—Å—Ç—å.",
                    meaningReversed: "–°–µ–∫—Ä–µ—Ç—ã, —Å–∫—Ä—ã—Ç—ã–µ –º–æ—Ç–∏–≤—ã, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ –∏–Ω—Ç—É–∏—Ü–∏–∏.",
                    meaning: "–ò–Ω—Ç—É–∏—Ü–∏—è, —Ç–∞–π–Ω—ã–µ –∑–Ω–∞–Ω–∏—è, –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –º—É–¥—Ä–æ—Å—Ç—å.",
                    image: "./images/cards/high-priestess.jpg",
                    type: "–°—Ç–∞—Ä—à–∏–µ –ê—Ä–∫–∞–Ω—ã",
                    element: "–í–æ–¥–∞"
                }
            ];
        }

        // üéØ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –†–ê–°–ö–õ–ê–î–û–í
        if (typeof window.SPREADS_CONFIG === 'undefined') {
            window.SPREADS_CONFIG = {
                threeCard: {
                    name: '–ü—Ä–æ—à–ª–æ–µ-–ù–∞—Å—Ç–æ—è—â–µ–µ-–ë—É–¥—É—â–µ–µ',
                    description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ä–∞—Å–∫–ª–∞–¥ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —Å–∏—Ç—É–∞—Ü–∏–∏',
                    cardCount: 3,
                    positions: [
                        { name: '–ü—Ä–æ—à–ª–æ–µ', description: '–ß—Ç–æ –ø—Ä–∏–≤–µ–ª–æ –∫ —Ç–µ–∫—É—â–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏' },
                        { name: '–ù–∞—Å—Ç–æ—è—â–µ–µ', description: '–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–µ–ª' },
                        { name: '–ë—É–¥—É—â–µ–µ', description: '–í–æ–∑–º–æ–∂–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ —Å–æ–±—ã—Ç–∏–π' }
                    ]
                },
                celticCross: {
                    name: '–ö–µ–ª—å—Ç—Å–∫–∏–π –∫—Ä–µ—Å—Ç',
                    description: '–ü–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–∏—Ç—É–∞—Ü–∏–∏',
                    cardCount: 5,
                    positions: [
                        { name: '–°—É—Ç—å –≤–æ–ø—Ä–æ—Å–∞', description: '–û—Å–Ω–æ–≤–∞ —Å–∏—Ç—É–∞—Ü–∏–∏' },
                        { name: '–ü—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ', description: '–ß—Ç–æ –º–µ—à–∞–µ—Ç –∏–ª–∏ –ø–æ–º–æ–≥–∞–µ—Ç' },
                        { name: '–ü—Ä–æ—à–ª–æ–µ', description: '–ö–æ—Ä–Ω–∏ —Å–∏—Ç—É–∞—Ü–∏–∏' },
                        { name: '–í–æ–∑–º–æ–∂–Ω–æ–µ –±—É–¥—É—â–µ–µ', description: '–í–µ—Ä–æ—è—Ç–Ω—ã–π –∏—Å—Ö–æ–¥' },
                        { name: '–°–æ–≤–µ—Ç', description: '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –∫–∞—Ä—Ç' }
                    ]
                },
                relationship: {
                    name: '–†–∞—Å–∫–ª–∞–¥ –æ—Ç–Ω–æ—à–µ–Ω–∏–π', 
                    description: '–ê–Ω–∞–ª–∏–∑ –æ—Ç–Ω–æ—à–µ–Ω–∏–π –º–µ–∂–¥—É –¥–≤—É–º—è –ª—é–¥—å–º–∏',
                    cardCount: 3,
                    positions: [
                        { name: '–í–∞—à–∏ —á—É–≤—Å—Ç–≤–∞', description: '–í–∞—à–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ —Å–∏—Ç—É–∞—Ü–∏–∏' },
                        { name: '–ß—É–≤—Å—Ç–≤–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–∞', description: '–û—Ç–Ω–æ—à–µ–Ω–∏–µ –¥—Ä—É–≥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞' },
                        { name: '–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã', description: '–ë—É–¥—É—â–µ–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–π' }
                    ]
                }
            };
        }

        // ‚úÖ –ü–†–û–í–ï–†–ö–ê –¶–ï–õ–û–°–¢–ù–û–°–¢–ò –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò
        const configChecks = [
            { name: 'SUPABASE_CONFIG', obj: window.SUPABASE_CONFIG, required: ['url'] },
            { name: 'API_CONFIG', obj: window.API_CONFIG, required: ['cardsUrl'] },
            { name: 'APP_CONFIG', obj: window.APP_CONFIG, required: ['appName', 'version'] },
            { name: 'FALLBACK_CARDS', obj: window.FALLBACK_CARDS, required: [] }
        ];

        let configValid = true;
        for (const check of configChecks) {
            if (!check.obj) {
                console.error(`‚ùå ${check.name} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
                configValid = false;
                continue;
            }

            for (const field of check.required) {
                if (!check.obj[field]) {
                    console.error(`‚ùå ${check.name}.${field} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
                    configValid = false;
                }
            }
        }

        if (configValid) {
            console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞');
        } else {
            console.warn('‚ö†Ô∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏');
        }

        // üìä –û–¢–õ–ê–î–û–ß–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø
        if (window.location.hostname === 'localhost' || window.location.search.includes('debug=true')) {
            console.log('üîß –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:');
            console.log('- Supabase URL:', window.SUPABASE_CONFIG.url ? '–ù–∞—Å—Ç—Ä–æ–µ–Ω' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
            console.log('- n8n Webhook:', window.API_CONFIG.n8nWebhookUrl ? '–ù–∞—Å—Ç—Ä–æ–µ–Ω' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
            console.log('- –ö–∞—Ä—Ç—ã URL:', window.API_CONFIG.cardsUrl ? '–ù–∞—Å—Ç—Ä–æ–µ–Ω' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
            console.log('- –§–æ–ª–ª–±—ç–∫ –∫–∞—Ä—Ç:', window.FALLBACK_CARDS.length);
        }

        return configValid;

    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error);
        
        // –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        window.APP_CONFIG = {
            appName: '–®—ë–ø–æ—Ç –ö–∞—Ä—Ç',
            version: '1.0.0',
            freeQuestionsLimit: 3
        };
        
        window.FALLBACK_CARDS = [
            {
                id: "EMERGENCY",
                name: "–ê–≤–∞—Ä–∏–π–Ω–∞—è –∫–∞—Ä—Ç–∞",
                symbol: "‚ö†Ô∏è", 
                meaning: "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –≤ –∞–≤–∞—Ä–∏–π–Ω–æ–º —Ä–µ–∂–∏–º–µ",
                type: "–°–∏—Å—Ç–µ–º–Ω–∞—è"
            }
        ];

        return false;
    }
}

// üîç –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ü–û–õ–£–ß–ï–ù–ò–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò (—Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏)
function getSupabaseConfig() {
    if (!window.SUPABASE_CONFIG) {
        console.warn('‚ö†Ô∏è SUPABASE_CONFIG –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return null;
    }
    return window.SUPABASE_CONFIG;
}

function getAPIConfig() {
    if (!window.API_CONFIG) {
        console.warn('‚ö†Ô∏è API_CONFIG –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return null;
    }
    return window.API_CONFIG;
}

function getAppConfig() {
    if (!window.APP_CONFIG) {
        console.warn('‚ö†Ô∏è APP_CONFIG –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return null;
    }
    return window.APP_CONFIG;
}

// üß™ –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –û–¢–õ–ê–î–ö–ò –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò
function debugConfig() {
    console.log('üîß –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', {
        supabase: !!window.SUPABASE_CONFIG,
        api: !!window.API_CONFIG,
        app: !!window.APP_CONFIG,
        tables: !!window.TABLES,
        telegram: !!window.TELEGRAM_CONFIG,
        fallbackCards: window.FALLBACK_CARDS ? window.FALLBACK_CARDS.length : 0,
        spreads: window.SPREADS_CONFIG ? Object.keys(window.SPREADS_CONFIG).length : 0
    });
    
    return {
        initialized: !!(window.SUPABASE_CONFIG && window.API_CONFIG && window.APP_CONFIG),
        timestamp: new Date().toISOString()
    };
}

// üîÑ –ü–ï–†–ï–ó–ê–ì–†–£–ó–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò
async function reloadConfig() {
    console.log('üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');
    
    // –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    delete window.SUPABASE_CONFIG;
    delete window.API_CONFIG;
    delete window.APP_CONFIG;
    delete window.TABLES;
    delete window.TELEGRAM_CONFIG;
    delete window.FALLBACK_CARDS;
    delete window.SPREADS_CONFIG;
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–∞–Ω–æ–≤–æ
    return await initializeConfig();
}

// üìã –ü–†–û–í–ï–†–ö–ê –ì–û–¢–û–í–ù–û–°–¢–ò –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò
function isConfigReady() {
    return !!(
        window.SUPABASE_CONFIG &&
        window.API_CONFIG &&
        window.APP_CONFIG &&
        window.FALLBACK_CARDS
    );
}

// üõ†Ô∏è –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
function getGitHubRepoFromUrl(url) {
    try {
        const match = url.match(/github\.com\/([^\/]+\/[^\/]+)/);
        return match ? match[1] : 'YOUR_USERNAME/tarot-web-app';
    } catch (error) {
        console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ GitHub URL:', error);
        return 'YOUR_USERNAME/tarot-web-app';
    }
}

function validateURL(url) {
    try {
        new URL(url);
        return true;
    } catch {
        return false;
    }
}

// üîê –ë–ï–ó–û–ü–ê–°–ù–û–ï –ü–û–õ–£–ß–ï–ù–ò–ï –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø
function getEnvVar(name, defaultValue = '') {
    try {
        // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–∑ process.env (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
        if (typeof process !== 'undefined' && process.env && process.env[name]) {
            return process.env[name];
        }
        
        // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        if (typeof window !== 'undefined' && window[name]) {
            return window[name];
        }
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        return defaultValue;
    } catch (error) {
        console.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π ${name}:`, error);
        return defaultValue;
    }
}

// üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò
function getConfigStats() {
    return {
        totalConfigs: 6,
        loadedConfigs: [
            !!window.SUPABASE_CONFIG,
            !!window.API_CONFIG,
            !!window.APP_CONFIG,
            !!window.TABLES,
            !!window.TELEGRAM_CONFIG,
            !!window.FALLBACK_CARDS
        ].filter(Boolean).length,
        fallbackCardsCount: window.FALLBACK_CARDS ? window.FALLBACK_CARDS.length : 0,
        spreadsCount: window.SPREADS_CONFIG ? Object.keys(window.SPREADS_CONFIG).length : 0,
        lastInitialized: new Date().toISOString()
    };
}

// üö® –≠–ö–°–¢–†–ï–ù–ù–û–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï
function emergencyConfigRecovery() {
    console.warn('üö® –ó–∞–ø—É—Å–∫ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');
    
    try {
        // –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã
        window.APP_CONFIG = {
            appName: '–®—ë–ø–æ—Ç –ö–∞—Ä—Ç',
            version: '1.0.0-emergency',
            freeQuestionsLimit: 1,
            texts: {
                loading: '–ó–∞–≥—Ä—É–∑–∫–∞...',
                error: '–û—à–∏–±–∫–∞',
                cardsReady: '–ì–æ—Ç–æ–≤–æ'
            }
        };

        window.FALLBACK_CARDS = [
            {
                id: "EMERGENCY_1",
                name: "–ó–≤–µ–∑–¥–∞ –ù–∞–¥–µ–∂–¥—ã",
                symbol: "‚≠ê",
                meaning: "–î–∞–∂–µ –≤ —Ç—Ä—É–¥–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–∞ –µ—Å—Ç—å —Å–≤–µ—Ç –≤ –∫–æ–Ω—Ü–µ —Ç—É–Ω–Ω–µ–ª—è",
                type: "–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è"
            }
        ];

        window.SPREADS_CONFIG = {
            simple: {
                name: '–ü—Ä–æ—Å—Ç–æ–π —Ä–∞—Å–∫–ª–∞–¥',
                description: '–û–¥–Ω–∞ –∫–∞—Ä—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å',
                cardCount: 1,
                positions: [{ name: '–û—Ç–≤–µ—Ç', description: '–û—Å–Ω–æ–≤–Ω–æ–π –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å' }]
            }
        };

        console.log('‚úÖ –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞');
        return true;
    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:', error);
        return false;
    }
}

// üîÑ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê –ò –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï
function setupConfigWatchdog() {
    setInterval(() => {
        if (!isConfigReady()) {
            console.warn('‚ö†Ô∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∞, –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é...');
            emergencyConfigRecovery();
        }
    }, 30000); // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
}

// üì§ –≠–ö–°–ü–û–†–¢ –î–õ–Ø –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø –í –î–†–£–ì–ò–• –§–ê–ô–õ–ê–•
if (typeof module !== 'undefined' && module.exports) {
    module.exports = {
        initializeConfig,
        getSupabaseConfig,
        getAPIConfig, 
        getAppConfig,
        debugConfig,
        reloadConfig,
        isConfigReady,
        getConfigStats,
        emergencyConfigRecovery,
        setupConfigWatchdog
    };
}

// üèÅ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
if (typeof document !== 'undefined') {
    document.addEventListener('DOMContentLoaded', function() {
        initializeConfig().then(success => {
            if (success) {
                console.log('üéâ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é');
                setupConfigWatchdog();
            } else {
                console.warn('‚ö†Ô∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏');
                emergencyConfigRecovery();
            }
        });
    });
}

// üîß –ì–õ–û–ë–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø –û–¢–õ–ê–î–ö–ò
if (typeof window !== 'undefined') {
    window.debugTarotConfig = debugConfig;
    window.reloadTarotConfig = reloadConfig;
    window.getTarotConfigStats = getConfigStats;
}
