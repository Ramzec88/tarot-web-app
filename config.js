// config.js - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
// ========================================================================

console.log('üîß –ó–∞–≥—Ä—É–∑–∫–∞ config.js...');

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
window.SUPABASE_CONFIG = null;
window.API_CONFIG = null;
window.APP_CONFIG = null;
window.TABLES = {
    userProfiles: 'tarot_user_profiles',
    dailyCards: 'tarot_daily_cards',
    reviews: 'tarot_reviews',
    spreads: 'tarot_spreads',
    questions: 'tarot_questions',
    answers: 'tarot_answers'
};
window.TELEGRAM_CONFIG = {
    botUsername: 'ShepotKartBot',
    webAppUrl: 'https://tarot-web-app-one.vercel.app', // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL
    supportBot: '@Helppodark_bot'
};
window.FALLBACK_CARDS = [];
window.SPREADS_CONFIG = {};

// üöÄ –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò
async function initializeConfig() {
    console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');

    try {
        // –°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º fallback –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        setupFallbackConfigs();
        
        // –ó–∞—Ç–µ–º –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ API
        await loadConfigFromAPI();
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        setupAdditionalConfigs();
        
        console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
        return true;
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error);
        setupFallbackConfigs(); // –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
        return false;
    }
}

// üîÑ –ó–ê–ì–†–£–ó–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò –ò–ó API
async function loadConfigFromAPI() {
    try {
        console.log('üåê –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ API...');

        const response = await fetch('/api/config', {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json'
            }
        });

        if (response.ok) {
            const config = await response.json();
            console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑ API');

            if (config.supabase) {
                window.SUPABASE_CONFIG = config.supabase;
                console.log('‚úÖ Supabase –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
            }

            if (config.api) {
                window.API_CONFIG = {
                    n8nWebhookUrl: config.api.n8nWebhookUrl || 'https://your-n8n.app/webhook/tarot',
                    cardsUrl: config.api.cardsUrl || 'https://raw.githubusercontent.com/username/tarot-cards/main/cards.json',
                    paymentUrl: config.api.paymentUrl || 'https://www.wildberries.ru/catalog/199937445/detail.aspx',
                    timeout: 10000,
                    retryAttempts: 3
                };
                console.log('‚úÖ API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
            }

            if (config.app) {
                window.APP_CONFIG = {
                    ...getDefaultAppConfig(),
                    freeQuestionsLimit: config.app.freeQuestionsLimit || 3,
                    premiumPrice: config.app.premiumPrice || 299
                };
                console.log('‚úÖ App –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
            }

            return true;
        } else {
            console.warn('‚ö†Ô∏è API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é');
            return false;
        }

    } catch (error) {
        console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ API:', error);
        return false;
    }
}

// üõ°Ô∏è –£–°–¢–ê–ù–û–í–ö–ê FALLBACK –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ô
function setupFallbackConfigs() {
    console.log('üõ°Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ fallback –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π...');

    if (!window.SUPABASE_CONFIG) {
        window.SUPABASE_CONFIG = {
            url: 'https://your-project.supabase.co', // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL
            anonKey: 'your-anon-key' // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –∫–ª—é—á
        };
    }

    if (!window.API_CONFIG) {
        window.API_CONFIG = {
            n8nWebhookUrl: 'https://your-n8n.app/webhook/tarot',
            cardsUrl: 'https://raw.githubusercontent.com/username/tarot-cards/main/cards.json',
            paymentUrl: 'https://www.wildberries.ru/catalog/199937445/detail.aspx',
            timeout: 10000,
            retryAttempts: 3
        };
    }

    if (!window.APP_CONFIG) {
        window.APP_CONFIG = getDefaultAppConfig();
    }
}

// üéØ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò
function setupAdditionalConfigs() {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º fallback –∫–∞—Ä—Ç—ã
    if (!window.FALLBACK_CARDS || window.FALLBACK_CARDS.length === 0) {
        window.FALLBACK_CARDS = getDefaultCards();
    }

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞—Å–∫–ª–∞–¥—ã
    if (!window.SPREADS_CONFIG || Object.keys(window.SPREADS_CONFIG).length === 0) {
        window.SPREADS_CONFIG = getDefaultSpreads();
    }
}

// üìã –î–ï–§–û–õ–¢–ù–´–ï –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò
function getDefaultAppConfig() {
    return {
        appName: '–®—ë–ø–æ—Ç –∫–∞—Ä—Ç',
        version: '1.0.0',
        freeQuestionsLimit: 3,
        premiumPrice: 299,
        showWelcomeModal: true,
        enableNotifications: true,
        cacheTimeout: 3600000, // 1 —á–∞—Å
        debugMode: false
    };
}

function getDefaultCards() {
    return [
        {
            id: 1,
            name: '–î—É—Ä–∞–∫',
            arcana: 'major',
            number: 0,
            keywords: ['–Ω–æ–≤—ã–µ –Ω–∞—á–∏–Ω–∞–Ω–∏—è', '—Å–ø–æ–Ω—Ç–∞–Ω–Ω–æ—Å—Ç—å', '—Å–≤–æ–±–æ–¥–∞'],
            description: '–ö–∞—Ä—Ç–∞ –Ω–æ–≤—ã—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏–π –∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π.',
            image: 'üÉè'
        },
        {
            id: 2,
            name: '–ú–∞–≥',
            arcana: 'major',
            number: 1,
            keywords: ['–≤–æ–ª—è', '–º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ', '—Å–∏–ª–∞'],
            description: '–ö–∞—Ä—Ç–∞ –ø—Ä–æ—è–≤–ª–µ–Ω–∏—è –∂–µ–ª–∞–Ω–∏–π –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–ª–∞–Ω–æ–≤.',
            image: 'üßô‚Äç‚ôÇÔ∏è'
        },
        {
            id: 3,
            name: '–í–µ—Ä—Ö–æ–≤–Ω–∞—è –ñ—Ä–∏—Ü–∞',
            arcana: 'major',
            number: 2,
            keywords: ['–∏–Ω—Ç—É–∏—Ü–∏—è', '—Ç–∞–π–Ω—ã–µ –∑–Ω–∞–Ω–∏—è', '–º—É–¥—Ä–æ—Å—Ç—å'],
            description: '–ö–∞—Ä—Ç–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –º—É–¥—Ä–æ—Å—Ç–∏ –∏ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è.',
            image: 'üë∏'
        },
        {
            id: 4,
            name: '–ò–º–ø–µ—Ä–∞—Ç—Ä–∏—Ü–∞',
            arcana: 'major',
            number: 3,
            keywords: ['–ø–ª–æ–¥–æ—Ä–æ–¥–∏–µ', '—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ', '–∏–∑–æ–±–∏–ª–∏–µ'],
            description: '–ö–∞—Ä—Ç–∞ —Ç–≤–æ—Ä—á–µ—Å–∫–æ–π —ç–Ω–µ—Ä–≥–∏–∏ –∏ –º–∞—Ç–µ—Ä–∏–Ω—Å–∫–æ–π –∑–∞–±–æ—Ç—ã.',
            image: 'üëë'
        },
        {
            id: 5,
            name: '–ò–º–ø–µ—Ä–∞—Ç–æ—Ä',
            arcana: 'major',
            number: 4,
            keywords: ['–≤–ª–∞—Å—Ç—å', '—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å', '–ª–∏–¥–µ—Ä—Å—Ç–≤–æ'],
            description: '–ö–∞—Ä—Ç–∞ –≤–ª–∞—Å—Ç–∏, –ø–æ—Ä—è–¥–∫–∞ –∏ –º—É–∂—Å–∫–æ–π —ç–Ω–µ—Ä–≥–∏–∏.',
            image: 'ü§¥'
        }
    ];
}

function getDefaultSpreads() {
    return {
        daily: {
            name: '–ö–∞—Ä—Ç–∞ –¥–Ω—è',
            description: '–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ',
            cards: [{ name: '–ö–∞—Ä—Ç–∞ –¥–Ω—è', description: '–û—Å–Ω–æ–≤–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è –¥–Ω—è' }]
        },
        simple: {
            name: '–ü—Ä–æ—Å—Ç–æ–π –æ—Ç–≤–µ—Ç',
            description: '–û—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å',
            cards: [{ name: '–û—Ç–≤–µ—Ç', description: '–û—Å–Ω–æ–≤–Ω–æ–π –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å' }]
        },
        love: {
            name: '–õ—é–±–æ–≤—å',
            description: '–†–∞—Å–∫–ª–∞–¥ –Ω–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏—è',
            cards: [
                { name: '–í—ã', description: '–í–∞—à–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö' },
                { name: '–ü–∞—Ä—Ç–Ω–µ—Ä', description: '–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–∞—Ä—Ç–Ω–µ—Ä–∞' },
                { name: '–û—Ç–Ω–æ—à–µ–Ω–∏—è', description: '–û–±—â–∞—è –¥–∏–Ω–∞–º–∏–∫–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏–π' }
            ]
        },
        career: {
            name: '–ö–∞—Ä—å–µ—Ä–∞',
            description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã',
            cards: [
                { name: '–¢–µ–∫—É—â–∞—è —Å–∏—Ç—É–∞—Ü–∏—è', description: '–ì–¥–µ –≤—ã —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å' },
                { name: '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏', description: '–ß—Ç–æ –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω–æ' },
                { name: '–†–µ–∑—É–ª—å—Ç–∞—Ç', description: '–ö —á–µ–º—É —ç—Ç–æ –ø—Ä–∏–≤–µ–¥–µ—Ç' }
            ]
        }
    };
}

// üìä –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ü–û–õ–£–ß–ï–ù–ò–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò
function getSupabaseConfig() {
    return window.SUPABASE_CONFIG;
}

function getAPIConfig() {
    return window.API_CONFIG;
}

function getAppConfig() {
    return window.APP_CONFIG;
}

function getTablesConfig() {
    return window.TABLES;
}

function getTelegramConfig() {
    return window.TELEGRAM_CONFIG;
}

function getFallbackCards() {
    return window.FALLBACK_CARDS;
}

function getSpreadsConfig() {
    return window.SPREADS_CONFIG;
}

// ‚úÖ –ü–†–û–í–ï–†–ö–ê –ì–û–¢–û–í–ù–û–°–¢–ò
function isConfigReady() {
    return !!(
        window.SUPABASE_CONFIG &&
        window.API_CONFIG &&
        window.APP_CONFIG &&
        window.FALLBACK_CARDS &&
        window.TABLES &&
        window.TELEGRAM_CONFIG &&
        window.SPREADS_CONFIG
    );
}

// üîß –û–¢–õ–ê–î–ö–ê
function debugConfig() {
    console.log('üîß –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', {
        supabase: !!window.SUPABASE_CONFIG,
        api: !!window.API_CONFIG,
        app: !!window.APP_CONFIG,
        tables: !!window.TABLES,
        telegram: !!window.TELEGRAM_CONFIG,
        fallbackCards: window.FALLBACK_CARDS ? window.FALLBACK_CARDS.length : 0,
        spreads: window.SPREADS_CONFIG ? Object.keys(window.SPREADS_CONFIG).length : 0
    });
}

// üåü –≠–ö–°–ü–û–†–¢ –§–£–ù–ö–¶–ò–ô –í –ì–õ–û–ë–ê–õ–¨–ù–£–Æ –û–ë–õ–ê–°–¢–¨
window.initializeConfig = initializeConfig;
window.getSupabaseConfig = getSupabaseConfig;
window.getAPIConfig = getAPIConfig;
window.getAppConfig = getAppConfig;
window.getTablesConfig = getTablesConfig;
window.getTelegramConfig = getTelegramConfig;
window.getFallbackCards = getFallbackCards;
window.getSpreadsConfig = getSpreadsConfig;
window.isConfigReady = isConfigReady;
window.debugConfig = debugConfig;

// üèÅ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
document.addEventListener('DOMContentLoaded', async () => {
    console.log('üèÅ DOM –≥–æ—Ç–æ–≤, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é...');
    await initializeConfig();
    console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞');
});

console.log('‚úÖ Config.js –∑–∞–≥—Ä—É–∂–µ–Ω');
