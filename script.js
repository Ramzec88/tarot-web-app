// script.js - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å —Ä–∞–±–æ—á–∏–º–∏ —Ç–∞–±–∞–º–∏
// ========================================================================

// üåê –ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï
let supabase = null;
let supabaseReady = false;
let supabaseConnectionRetries = 0;
const MAX_SUPABASE_RETRIES = 3;
let currentUser = null;
let appState = {
    currentTab: 'daily',
    questionsLeft: 3,
    isPremium: false
};

// üöÄ –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
async function initApp() {
    try {
        console.log('üîÆ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Tarot Web App...');
        
        // 1. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ç–∞–±–æ–≤
        setupTabEventListeners();
        
        // 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
        initTelegramWebApp();
        
        // 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Supabase
        await initSupabase();
        
        // 4. –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
        await loadUserData();
        
        // 5. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥—Ä—É–≥–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
        setupOtherEventListeners();
        
        // 6. –ü–æ–∫–∞–∑ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        checkAndShowWelcome();
        
        console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
        showErrorMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
    }
}

// üîó –ù–ê–°–¢–†–û–ô–ö–ê –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í –°–û–ë–´–¢–ò–ô –î–õ–Ø –¢–ê–ë–û–í
function setupTabEventListeners() {
    console.log('üîó –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ç–∞–±–æ–≤...');
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–∞–±—ã
    const navTabs = document.querySelectorAll('.nav-tab');
    
    if (navTabs.length === 0) {
        console.error('‚ùå –¢–∞–±—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ DOM');
        return;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∞–±–∞
    navTabs.forEach(tab => {
        tab.addEventListener('click', function(e) {
            e.preventDefault();
            
            const tabName = this.getAttribute('data-tab');
            if (tabName) {
                console.log(`üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Ç–∞–±: ${tabName}`);
                switchTab(tabName);
            }
        });
    });
    
    console.log(`‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –¥–ª—è ${navTabs.length} —Ç–∞–±–æ–≤`);
}

// üîÑ –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–ï –ú–ï–ñ–î–£ –¢–ê–ë–ê–ú–ò
function switchTab(tabName) {
    try {
        console.log(`üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Ç–∞–±: ${tabName}`);
        
        // 1. –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        appState.currentTab = tabName;
        
        // 2. –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–æ –≤—Å–µ—Ö —Ç–∞–±–æ–≤
        document.querySelectorAll('.nav-tab').forEach(tab => {
            tab.classList.remove('active');
        });
        
        // 3. –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Ç–µ–∫—É—â–µ–º—É —Ç–∞–±—É
        const currentTabElement = document.querySelector(`[data-tab="${tabName}"]`);
        if (currentTabElement) {
            currentTabElement.classList.add('active');
        }
        
        // 4. –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–Ω—Ç—ã —Ç–∞–±–æ–≤
        document.querySelectorAll('.tab-content').forEach(content => {
            content.classList.remove('active');
            content.style.display = 'none';
        });
        
        // 5. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –Ω—É–∂–Ω–æ–≥–æ —Ç–∞–±–∞
        const targetContent = document.getElementById(`${tabName}-tab`);
        if (targetContent) {
            targetContent.classList.add('active');
            targetContent.style.display = 'block';
        } else {
            console.warn(`‚ö†Ô∏è –ö–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —Ç–∞–±–∞ ${tabName} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        }
        
        // 6. –í—ã–ø–æ–ª–Ω—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—É—é –ª–æ–≥–∏–∫—É –¥–ª—è —Ç–∞–±–∞
        handleTabSpecificLogic(tabName);
        
        // 7. –£–≤–µ–¥–æ–º–ª—è–µ–º Telegram WebApp –æ —Å–º–µ–Ω–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        if (window.Telegram?.WebApp) {
            window.Telegram.WebApp.expand();
        }
        
        console.log(`‚úÖ –¢–∞–± ${tabName} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω`);
        
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–∞–±–∞ ${tabName}:`, error);
    }
}

// üéØ –°–ü–ï–¶–ò–§–ò–ß–ù–ê–Ø –õ–û–ì–ò–ö–ê –î–õ–Ø –ö–ê–ñ–î–û–ì–û –¢–ê–ë–ê
function handleTabSpecificLogic(tabName) {
    switch (tabName) {
        case 'daily':
            handleDailyTab();
            break;
        case 'question':
            handleQuestionTab();
            break;
        case 'spreads':
            handleSpreadsTab();
            break;
        case 'history':
            handleHistoryTab();
            break;
        case 'reviews':
            handleReviewsTab();
            break;
        case 'premium':
            handlePremiumTab();
            break;
        default:
            console.warn(`‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∞–±: ${tabName}`);
    }
}

// üìÖ –õ–û–ì–ò–ö–ê –¢–ê–ë–ê "–ö–ê–†–¢–ê –î–ù–Ø"
function handleDailyTab() {
    console.log('üìÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∞–±–∞ "–ö–∞—Ä—Ç–∞ –¥–Ω—è"');
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã –¥–Ω—è
    checkTodayCard();
}

// ‚ùì –õ–û–ì–ò–ö–ê –¢–ê–ë–ê "–í–û–ü–†–û–°"
function handleQuestionTab() {
    console.log('‚ùì –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∞–±–∞ "–í–æ–ø—Ä–æ—Å"');
    updateQuestionsCounter();
}

// üÉè –õ–û–ì–ò–ö–ê –¢–ê–ë–ê "–†–ê–°–ö–õ–ê–î–´"
function handleSpreadsTab() {
    console.log('üÉè –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∞–±–∞ "–†–∞—Å–∫–ª–∞–¥—ã"');
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Premium —Å—Ç–∞—Ç—É—Å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–∞—Å–∫–ª–∞–¥–∞–º
    if (!appState.isPremium) {
        showPremiumRequired();
    }
}

// üìñ –õ–û–ì–ò–ö–ê –¢–ê–ë–ê "–ò–°–¢–û–†–ò–Ø"
function handleHistoryTab() {
    console.log('üìñ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∞–±–∞ "–ò—Å—Ç–æ—Ä–∏—è"');
    loadUserHistory();
}

// ‚≠ê –õ–û–ì–ò–ö–ê –¢–ê–ë–ê "–û–¢–ó–´–í–´"
function handleReviewsTab() {
    console.log('‚≠ê –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∞–±–∞ "–û—Ç–∑—ã–≤—ã"');
    loadReviews();
}

// üëë –õ–û–ì–ò–ö–ê –¢–ê–ë–ê "PREMIUM"
function handlePremiumTab() {
    console.log('üëë –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∞–±–∞ "Premium"');
    // –õ–æ–≥–∏–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Premium –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
}

// üì± –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø TELEGRAM WEBAPP
function initTelegramWebApp() {
    console.log('üì± –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp...');
    
    try {
        if (window.Telegram?.WebApp) {
            const tg = window.Telegram.WebApp;
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            tg.ready();
            tg.expand();
            tg.enableClosingConfirmation();
            
            // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–º—ã
            document.documentElement.style.setProperty('--tg-theme-bg-color', tg.backgroundColor || '#1a1a2e');
            document.documentElement.style.setProperty('--tg-theme-text-color', tg.textColor || '#ffffff');
            
            // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if (tg.initDataUnsafe?.user) {
                currentUser = tg.initDataUnsafe.user;
                console.log('‚úÖ –î–∞–Ω–Ω—ã–µ Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω—ã:', currentUser.first_name);
            }
            
            console.log('‚úÖ Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        } else {
            console.warn('‚ö†Ô∏è Telegram WebApp –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ, –∑–∞–ø—É—Å–∫ –≤–Ω–µ Telegram)');
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram WebApp:', error);
    }
}

// üóÑÔ∏è –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø SUPABASE
async function initSupabase() {
    try {
        console.log('üóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Supabase...');
        
        // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        const config = getSupabaseConfigSafely();
        if (!config) {
            console.warn('‚ö†Ô∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, —Ä–∞–±–æ—Ç–∞–µ–º –≤ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–º —Ä–µ–∂–∏–º–µ');
            return false;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Supabase
        if (!await ensureSupabaseLibrary()) {
            console.error('‚ùå –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ Supabase –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
            return false;
        }
        
        // –í–∞–ª–∏–¥–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        if (!validateSupabaseConfig(config)) {
            console.error('‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase');
            return false;
        }
        
        // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase
        supabase = window.supabase.createClient(config.url, config.anonKey, {
            auth: {
                autoRefreshToken: true,
                persistSession: true,
                detectSessionInUrl: false
            },
            realtime: {
                params: {
                    eventsPerSecond: 2
                }
            }
        });
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        const connectionTest = await testSupabaseConnection();
        if (connectionTest) {
            supabaseReady = true;
            console.log('‚úÖ Supabase —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω');
            
            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
            setupSupabaseEventHandlers();
            
            return true;
        } else {
            console.warn('‚ö†Ô∏è Supabase –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –Ω–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ');
            return false;
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Supabase:', error);
        return false;
    }
}

// üîß –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø SUPABASE
function getSupabaseConfigSafely() {
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        if (typeof window.getSupabaseConfig === 'function') {
            const config = window.getSupabaseConfig();
            if (config && config.url && config.anonKey) {
                return config;
            }
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        if (window.SUPABASE_CONFIG && window.SUPABASE_CONFIG.url && window.SUPABASE_CONFIG.anonKey) {
            return window.SUPABASE_CONFIG;
        }
        
        return null;
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Supabase:', error);
        return null;
    }
}

async function ensureSupabaseLibrary() {
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –ª–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞
        if (typeof window.supabase !== 'undefined' && window.supabase.createClient) {
            console.log('‚úÖ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ Supabase —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
            return true;
        }
        
        console.log('üìö –ó–∞–≥—Ä—É–∂–∞—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É Supabase...');
        
        // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
        return new Promise((resolve) => {
            const script = document.createElement('script');
            script.src = 'https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2.39.3/dist/umd/supabase.min.js';
            script.async = true;
            
            script.onload = () => {
                console.log('‚úÖ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ Supabase –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
                setTimeout(() => resolve(true), 100);
            };
            
            script.onerror = () => {
                console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É Supabase');
                resolve(false);
            };
            
            document.head.appendChild(script);
            
            // –¢–∞–π–º–∞—É—Ç –Ω–∞ —Å–ª—É—á–∞–π –∑–∞–≤–∏—Å–∞–Ω–∏—è
            setTimeout(() => {
                resolve(false);
            }, 10000);
        });
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Supabase:', error);
        return false;
    }
}

function validateSupabaseConfig(config) {
    if (!config || typeof config !== 'object') {
        console.error('‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase –ø—É—Å—Ç–∞ –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞');
        return false;
    }
    
    if (!config.url || !config.anonKey) {
        console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Supabase');
        return false;
    }
    
    if (!isValidUrl(config.url)) {
        console.error('‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL Supabase');
        return false;
    }
    
    return true;
}

function isValidUrl(string) {
    try {
        new URL(string);
        return true;
    } catch {
        return false;
    }
}

async function testSupabaseConnection() {
    try {
        console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è Supabase...');
        
        // –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        const { data, error } = await supabase
            .from('tarot_user_profiles')
            .select('user_id')
            .limit(1);
        
        // –ï—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        if (error && !error.message.includes('does not exist')) {
            console.warn('‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è Supabase:', error.message);
            return false;
        }
        
        console.log('‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ Supabase —Ä–∞–±–æ—Ç–∞–µ—Ç');
        return true;
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è Supabase:', error);
        return false;
    }
}

function setupSupabaseEventHandlers() {
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π Supabase
    console.log('üîó –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π Supabase...');
}

// üë§ –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
async function loadUserData() {
    console.log('üë§ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    
    try {
        // –ï—Å–ª–∏ –µ—Å—Ç—å Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        if (currentUser?.id) {
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Supabase –∏–ª–∏ localStorage
            const userData = await getUserProfile(currentUser.id);
            if (userData) {
                appState.questionsLeft = userData.questionsLeft || 3;
                appState.isPremium = userData.isPremium || false;
                updateUI();
            }
        } else {
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ localStorage –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–Ω–µ Telegram
            const localData = localStorage.getItem('tarot_user_data');
            if (localData) {
                const parsedData = JSON.parse(localData);
                appState.questionsLeft = parsedData.questionsLeft || 3;
                appState.isPremium = parsedData.isPremium || false;
                updateUI();
            }
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    }
}

async function getUserProfile(userId) {
    if (!supabaseReady) {
        console.warn('‚ö†Ô∏è Supabase –Ω–µ –≥–æ—Ç–æ–≤, –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã');
        return null;
    }
    
    try {
        const { data, error } = await supabase
            .from('tarot_user_profiles')
            .select('*')
            .eq('user_id', userId)
            .single();
        
        if (error && error.code !== 'PGRST116') {
            throw error;
        }
        
        return data;
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        return null;
    }
}

// üé® –û–ë–ù–û–í–õ–ï–ù–ò–ï –ò–ù–¢–ï–†–§–ï–ô–°–ê
function updateUI() {
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤
    const questionsCounter = document.getElementById('questions-count');
    if (questionsCounter) {
        questionsCounter.textContent = appState.questionsLeft;
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏
    const subscriptionStatus = document.getElementById('subscription-status');
    if (subscriptionStatus) {
        if (appState.isPremium) {
            subscriptionStatus.classList.add('premium');
            subscriptionStatus.innerHTML = `
                <span class="status-icon">‚ú®</span>
                <span class="status-text">Premium –∞–∫—Ç–∏–≤–µ–Ω</span>
            `;
        } else {
            subscriptionStatus.classList.remove('premium');
            subscriptionStatus.innerHTML = `
                <span class="status-icon">üåë</span>
                <span class="status-text">–ë–∞–∑–æ–≤–∞—è –≤–µ—Ä—Å–∏—è</span>
            `;
        }
    }
}

// üîß –ù–ê–°–¢–†–û–ô–ö–ê –î–†–£–ì–ò–• –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í –°–û–ë–´–¢–ò–ô
function setupOtherEventListeners() {
    console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π...');
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å
    const askBtn = document.getElementById('ask-btn');
    if (askBtn) {
        askBtn.addEventListener('click', handleAskQuestion);
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–∞—Ä—Ç—ã –¥–Ω—è
    const dailyCard = document.getElementById('daily-card');
    if (dailyCard) {
        dailyCard.addEventListener('click', handleDailyCardClick);
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏
    const clearHistoryBtn = document.getElementById('clear-history-btn');
    if (clearHistoryBtn) {
        clearHistoryBtn.addEventListener('click', handleClearHistory);
    }
}

// üÉè –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ò–ì–†–û–í–û–ô –õ–û–ì–ò–ö–ò
function handleAskQuestion() {
    console.log('‚ùì –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–ø—Ä–æ—Å–∞...');
    
    const questionInput = document.getElementById('question-input');
    if (!questionInput) return;
    
    const question = questionInput.value.trim();
    if (!question) {
        showErrorMessage('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å');
        return;
    }
    
    if (appState.questionsLeft <= 0 && !appState.isPremium) {
        showPremiumRequired();
        return;
    }
    
    // –õ–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–ø—Ä–æ—Å–∞
    processQuestion(question);
}

function handleDailyCardClick() {
    console.log('üìÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –∫–∞—Ä—Ç–µ –¥–Ω—è...');
    // –õ–æ–≥–∏–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–∞—Ä—Ç—ã –¥–Ω—è
    drawDailyCard();
}

function handleClearHistory() {
    console.log('üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏...');
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é?')) {
        clearUserHistory();
    }
}

// üéÆ –ò–ì–†–û–í–ê–Ø –õ–û–ì–ò–ö–ê (–∑–∞–≥–ª—É—à–∫–∏)
async function checkTodayCard() {
    console.log('üìÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ä—Ç—ã –¥–Ω—è...');
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—Ä—Ç—ã –¥–Ω—è
}

async function drawDailyCard() {
    console.log('üÉè –í—ã—Ç—è–≥–∏–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã –¥–Ω—è...');
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –≤—ã—Ç—è–≥–∏–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã –¥–Ω—è
}

async function processQuestion(question) {
    console.log('üîÆ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–ø—Ä–æ—Å–∞:', question);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–ø—Ä–æ—Å–∞
}

function updateQuestionsCounter() {
    const counter = document.getElementById('questions-count');
    if (counter) {
        counter.textContent = appState.questionsLeft;
    }
}

async function loadUserHistory() {
    console.log('üìñ –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏
}

async function loadReviews() {
    console.log('‚≠ê –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–∑—ã–≤–æ–≤...');
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–∑—ã–≤–æ–≤
}

async function clearUserHistory() {
    console.log('üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏
}

// üö® –û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö
function showErrorMessage(message) {
    console.error('üö® –û—à–∏–±–∫–∞:', message);
    
    // –ü—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ)
    if (window.Telegram?.WebApp) {
        window.Telegram.WebApp.showAlert(message);
    } else {
        alert(message);
    }
}

function showPremiumRequired() {
    console.log('üëë –¢—Ä–µ–±—É–µ—Ç—Å—è Premium');
    switchTab('premium');
}

// üéâ –ü–†–ò–í–ï–¢–°–¢–í–ï–ù–ù–´–ô –≠–ö–†–ê–ù
function checkAndShowWelcome() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–æ–≤—ã–π –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const hasSeenWelcome = localStorage.getItem('tarot_seen_welcome');
    if (!hasSeenWelcome && !currentUser) {
        console.log('üëã –ü–æ–∫–∞–∑ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞...');
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫—Ä–∞–Ω
        localStorage.setItem('tarot_seen_welcome', 'true');
    }
}

// üåü –≠–ö–°–ü–û–†–¢ –î–õ–Ø –û–¢–õ–ê–î–ö–ò
window.tarotApp = {
    switchTab,
    appState,
    currentUser,
    supabaseReady,
    initApp
};

console.log('üìú Script.js –∑–∞–≥—Ä—É–∂–µ–Ω, –æ–∂–∏–¥–∞–Ω–∏–µ DOM...');
